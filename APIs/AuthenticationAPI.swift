//
// AuthenticationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class AuthenticationAPI {
    /**
     Check if credentials are correct and, if so, send back an auth token
     
     - parameter apiKey: (query) Account api key 
     - parameter domain: (query) Account domain name 
     - parameter email: (query) Account email 
     - parameter password: (query) Account password 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAuthToken(apiKey: String, domain: String, email: String, password: String, completion: @escaping ((_ error: Error?) -> Void)) {
        getAuthTokenWithRequestBuilder(apiKey: apiKey, domain: domain, email: email, password: password).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Check if credentials are correct and, if so, send back an auth token
     - GET /account/auth_token
     - Returns an HTTP 200 OK response code, an auth token and a representation of the requesting user if authentication was successful; returns a 401 status code and an error message if not. Use this method to test if supplied user credentials are valid.
     
     - parameter apiKey: (query) Account api key 
     - parameter domain: (query) Account domain name 
     - parameter email: (query) Account email 
     - parameter password: (query) Account password 

     - returns: RequestBuilder<Void> 
     */
    open class func getAuthTokenWithRequestBuilder(apiKey: String, domain: String, email: String, password: String) -> RequestBuilder<Void> {
        let path = "/account/auth_token"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "api_key": apiKey, 
            "domain": domain, 
            "email": email, 
            "password": password
        ])
        

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
