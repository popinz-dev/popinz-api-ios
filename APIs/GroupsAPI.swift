//
// GroupsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class GroupsAPI {
    /**
     Get group by Id
     
     - parameter groupId: (path) ID of the group 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getGroupById(groupId: String, completion: @escaping ((_ error: Error?) -> Void)) {
        getGroupByIdWithRequestBuilder(groupId: groupId).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Get group by Id
     - GET /groups/{groupId}
     - Get group by Id
     
     - parameter groupId: (path) ID of the group 

     - returns: RequestBuilder<Void> 
     */
    open class func getGroupByIdWithRequestBuilder(groupId: String) -> RequestBuilder<Void> {
        var path = "/groups/{groupId}"
        path = path.replacingOccurrences(of: "{groupId}", with: "\(groupId)", options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get groups list
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getGroups(completion: @escaping ((_ error: Error?) -> Void)) {
        getGroupsWithRequestBuilder().execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Get groups list
     - GET /groups/list
     - Get groups list

     - returns: RequestBuilder<Void> 
     */
    open class func getGroupsWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/groups/list"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
